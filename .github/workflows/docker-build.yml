name: Build and Push Docker Image

on:
  push:
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  DOCKERHUB_IMAGE: yzqzy/trade-signal

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.SERVER_HOST }}" ]; then
            echo "❌ SERVER_HOST 未设置"
            exit 1
          fi
          if [ -z "${{ secrets.SERVER_USERNAME }}" ]; then
            echo "❌ SERVER_USERNAME 未设置"
            exit 1
          fi
          echo "✅ 必要的环境变量检查通过"

      - name: Deploy to Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -e

            # 切换目录
            cd ~/workspace/trade-signal || {
              echo "❌ 目录切换失败"
              exit 1
            }

            echo "开始拉取最新镜像..."
            if ! docker compose -f docker-compose.prod.yml pull; then
              echo "❌ 镜像拉取失败"
              exit 1
            fi

            echo "开始部署服务..."
            if ! docker compose -p trade-signal --env-file .env.production -f docker-compose.prod.yml up -d; then
              echo "❌ 服务部署失败"
              docker compose -p trade-signal --env-file .env.production -f docker-compose.prod.yml logs
              exit 1
            fi
            echo "✅ 服务部署成功"
